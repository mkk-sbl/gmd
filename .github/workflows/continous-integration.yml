name: continous-integration

on:
  workflow_dispatch:       
  push:
    branches: [ "main" ]   
    paths: [ "input/**" ]  
  pull_request:
    branches: [ "main" ]
    paths: [ "input/**" ]
  
jobs:    
  
  # ----------------------------------------------------------------------

  convert-files:
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v3
      - run: gh release download wip --pattern 'xml2gmd'
      - run: ./xml2gmd # xml-input gmd-output comments
      # - uses: stefanzweifel/git-auto-commit-action@v4
      # with:
      #    commit_message: generated output from xml2gmd
      #    commit_user_name: converter[job]
      #    commit_user_email: converter[job]@cascade.de
      #    commit_author: converter[job]
      #    commit_options: '--signoff'
  
  # ----------------------------------------------------------------------       
  
  tag-wip-rolling-release:
    runs-on: ubuntu-latest
    needs: convert-files
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      - uses: rickstaa/action-create-tag@v1
        with:
          tag: "wip"
          message: "rolling: work in progress"
          force_push_tag: true
      - run: gh release download wip --pattern 'xml2gmd'
      - uses: ncipollo/release-action@v1    
        with:
          tag: "wip"
          name: "work in progress"
          body: |
            ## rolling release
            tied to tag 'wip' that always represents the
            state after the latest successful ci run
          prerelease: true
          allowUpdates: true
          removeArtifacts: true
          artifacts: "xml2gmd"
          
# ----------------------------------------------------------------------
  
  build-website:
    runs-on: ubuntu-latest
    needs: convert-files
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/configure-pages@v2
      - uses: actions/jekyll-build-pages@v1
        with:
          source: output
          destination: ./_site
      - uses: actions/upload-pages-artifact@v1
  
  # ----------------------------------------------------------------------
  
  deploy-website:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-website
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - id: deployment
        uses: actions/deploy-pages@v1
         
